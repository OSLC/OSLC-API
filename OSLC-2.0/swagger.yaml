# The YAML file defines the API for coding using OSLC 2.0
# The code is based off of the OSLC 2.0 specification located
# At http://open-services.net/bin/view/Main/OslcCoreSpecification

swagger: '2.0'

info:
  version: "2.0.0"
  title: "OSLC 2.0 API"
  contact:
    name: "IBM OSLC Team"
  license: 
    name: "Apache 2.0"
  
schemes: 
  - "http"
  
host: "oslc.mybluemix.net" # Host can be changed

# Primarily accepts packets in rdf+xml format, json if rdf+xml not available
consumes:
  - "application/rdf+xml"
  - "application/json"

# Primarily responds with packets in rdf+xml format, json if rdf+xml not available
produces:
  - "application/rdf+xml"
  - "application/json"

# All services should have a "/services" when accessing services
basePath: "/OSLC-2.0"

paths:

  # Path to the Service Provider Catalog
  /services/catalog:

    # GET operation to retrieve the SPC
    get:
      
      description: |
        Gets list of ServiceProviders.

      responses:

        "200":
          description: Successful response
          
          # Schema that describes response, as defined in "ref"
          schema:
            $ref: '#/definitions/ServiceProviders'

        "404":
          description: Unable to find catalog

        default:
          description: Unsuccessful response
 
  # Path to a Service Provider, as specified in "serviceProviderID"
  /services/serviceProviders/{serviceProviderID}:
  
    # GET the Service Provider
    get:
      description: |
        Gets a ServiceProvider resource.

      parameters:
        - name: serviceProviderID
          in: path
          description: ID of service provider
          required: true
          type: integer
          format: int64
        
      responses:
      
        "200":
          description: Successful response

          # Schema that describes response, as defined in "ref"
          schema:
            $ref: '#/definitions/ServiceProvider'

        default:
          description: Unsuccessful response

  # Path to a Service, as specified in "serviceID"
  /services/{serviceID}:

    # GET the Service
    get:
      description: |
        Lists options provided within service

      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64

      responses:

        "200":
          description: Successful

          # Schema that describes response, as defined in "ref"
          schema:
            $ref: '#/definitions/Service'

        "404":
          description: Unable to find resource

        default:
          description: Unsuccessful response

  # Path to the Creation Delegated Dialog within the Service
  /services/{serviceID}/dialog/create:
    
    # GET the Creation Delegated Dialog
    get:
      description: |
        Gets a resource creation dialog.

      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        
      responses:

        "200":
          description: Successful response

        default:
          description: Unsuccessful response

  # Path to the Selection Delegated Dialog within the Service
  /services/{serviceID}/dialog/select:

    # GET the Selection Delegated Dialog
    get:
      description: |
        Gets a resource selection dialog.

      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64

      responses:

        "200":
          description: Successful response

        default:
          description: Unsuccessful response

  # Path to the Factory within the Service
  /services/{serviceID}/factory:

    # POST the OSLC Resource to be created
    post:
      description: |
        Creates a new OSLC resource.

      # Need to input the resource inside the body
      # of the packet. Schema defined under "Resource"
      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: resource
          in: body
          description: New OSLC resource
          required: true
          schema:
            $ref: '#/definitions/Resource'

      responses:

        "200":
          description: Successful creation

        default:
          description: Unsuccessful response

  # Path to the UI Preview within the Service
  # This may not exist for some services
  /services/{serviceID}/preview:

    # GET the UI Preview
    get:
      description: |
        Obtain a UI Preview for a resource

      # Inputs the URI of the resource
      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: resource
          in: body
          description: URI for resource
          required: true
          schema:
            type: string

      consumes:
          - "application/x-oslc-compact+xml"

      produces:
          - "application/x-oslc-compact+xml"

      responses:
        # response header has "vary" field
        "200":
          description: Successful response

          headers:
            vary:
              type: string # URI directed to cache

        "406":
          description: Compact representation not supported

        default:
          description: Does not exist
          
  # Path to the Query within the Service
  /services/{serviceID}/query?{sqlQuery}:

    # GET the Query by putting the query in the URI
    get:
      description: |
        Enables a query for resources within this service via GET.

      # Inputs the query. Attached to the end of the URI
      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: sqlQuery
          in: path
          description: User's query of resources
          required: true
          type: string
          format: string

      responses:

        "200":
          description: Successful response

          # Schema for the resources that come back, as defined under "Resources"
          schema:
            $ref: '#/definitions/Resources'

        "400":
          description: Error in specification of query

        default:
          description: Unsuccessful response

  /services/{serviceID}/query:
    # POST to Query by putting the query in the body of the request
    post:
      description: |
        Enables a query for resources within this serice via POST.

      # Inputs the query into the body
      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: sqlQuery
          in: body
          description: User's query of resources
          required: true
          schema:
            type: string
            format: string

      responses:

        "200":
          description: Successful response

          # Schema for the resources that come back, as defined under "Resources"
          schema:
            $ref: '#/definitions/Resources'

        "400":
          description: Error in specification of query

        default:
          description: Unsuccessful response

  /services/{serviceID}/{resourceID}?{paging}:

    get:

      description: |
        Obtain a specific resource by resourceID

      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: resourceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: paging
          in: path
          description: Query to enable paging with oslc:paging=true or oslc.pageSize=<integer>
          required: true
          type: string

      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/Resource'
        
        "404":
          description: Unable to find resource

        default:
          description: Unsuccessful response


  /services/{serviceID}/{resourceID}:

    put:
      description: |
        Update an OSLC resource.

      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: resourceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: resource
          in: body
          description: The resource to update
          required: true
          schema:
            $ref: '#/definitions/Resource'

      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/Resource'

        "400":
          description: If-match header is missing

        "412": 
          description: Headers don't match

        "409":
          description: |
            Headers match, but another problem has occurred

        default:
          description: Unsuccessful response

    delete:
      description: |
        Delete an OSLC resource

      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: resourceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64

      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/Resource'

        "404":
          description: Unable to find resource

        default:
          description: Unsuccessful response

    head:
      description: |
        Get the size of the resource

      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: resourceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64

      responses:

        "200":
          description: Successful response

          headers:
            Content-Length:
              type: integer
              format: int64

        "404":
          description: Unable to find resource

        default:
          description: Unsuccessful response


    get:
      description: |
        Obtain a specific resource by resourceID

      parameters:
        - name: serviceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64
        - name: resourceID
          in: path
          description: ID of service
          required: true
          type: integer
          format: int64

      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/Resource'
        
        "404":
          description: Unable to find resource

        default:
          description: Unsuccessful response

definitions:

  # Defines a Service Provider as described in
  # The OSLC 2.0 specifications
  ServiceProvider:
    required:
      - serviceProviderID
      - dcterms:title
      - dcterms:description
      - dcterms:publisher
      - oslc:service
      - oslc:details
      - oslc:prefixDefinition
      - oslc:oauthConfiguration
    properties:
      serviceProviderID:
        type: integer
        format: int64
      dcterms:title:
        type: string
        format: string
      dcterms:description:
        type: string
        format: string
      dcterms:publisher:
        type: string
        format: string
      oslc:service:
        type: string
      oslc:details:
        type: string
        format: string
      oslc:prefixDefinition:
        type: string
        format: string
      oslc:oauthConfiguration:
        type: string

  # Defines an array of Service Providers
  ServiceProviders:
    type: array
    items:
      $ref: '#/definitions/ServiceProvider'

  # Defines a Service as described in
  # The OSLC 2.0 specifications
  Service:
    required:
      - serviceID
      - oslc:domain
      - oslc:creationFactory
      - oslc:queryCapability
      - oslc:selectionDialog
      - oscl:creationDialog
      - oslc:usage
    properties:
      serviceID:
        type: integer
        format: int64
      oslc:domain:
        type: string
      oslc:creationFactory:
        type: string
      oslc:queryCapability:
        type: string
      oslc:selectionDialog:
        type: string
      oscl:creationDialog:
        type: string
      oslc:usage:
        type: string
      oslc:uiPreview:
        type: string

  # Defines a Resource as described in
  # The OSLC 2.0 specifications
  Resource:
    required:
      - resourceID
      - name
      - URI
    properties:
      resourceID:
        type: integer
        format: int64
      name:
        type: string
      URI:
        type: string
      oslc:nextPage: # URL to next page of Resource is paging is enabled
        type: string

  # Defines an array of Resources
  Resources:
    type: array
    items:
      $ref: '#/definitions/Resource'

          